import { Inter } from "next/font/google";
import { StoreProvider } from "@/redux/provider";
import { Toaster } from "@/components/ui/sonner";
import DynamicTitle from "@/components/DynamicTitle";
import Script from "next/script";
import "./globals.css";
import BackToTopButton from "@/components/BackToTopButton";

const interSans = Inter({
  variable: "--font-inter-sans",
  subsets: ["latin"],
});

export const metadata = {
  title: "Event Services", // Default title, will be overridden by DynamicTitle
  description: "Generated by create next app",
  manifest: "/manifest.json",
  appleWebApp: {
    capable: true,
    statusBarStyle: "default",
    title: "Event Services", // Default title
  },
  icons: {
    apple: "/icon.webp",
  },
};

export const viewport = {
  themeColor: "#000000",
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <head>
        <link rel="manifest" href="/manifest.json" />
        <meta name="theme-color" content="#000000" />
        <link rel="apple-touch-icon" href="/icon.webp" />
      </head>
      <body className={`${interSans.variable} antialiased`}>
        <StoreProvider>
          <DynamicTitle />
          {children}
          <Toaster richColors position="top-right" />
          <BackToTopButton/>
        </StoreProvider>
        <Script id="register-sw" strategy="afterInteractive">
          {`
            if ('serviceWorker' in navigator) {
              window.addEventListener('load', function() {
                navigator.serviceWorker.register('/sw.js')
                  .then(function(registration) {                    
                  })
                  .catch(function(registrationError) {                    
                  });
              });
            }
          `}
        </Script>
      </body>
    </html>
  );
}
